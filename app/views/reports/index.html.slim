- content_for :bcrumb do
  .container.mb-4
    ol.breadcrumb
      li.breadcrumb-item.active Dashboard

main.container role="main"
  .welcome.jumbotron.mb-4
    h2.mb-4 Welcome to Commission Reporter!
    p Generate a report by setting the options below.

  ruby:
    today = Date.today
    saturday = today - (today.wday + 1) % 7
    sunday = saturday - 6

  .card.bg-light.mb-4
    .card-header.h5.font-weight-bold
      a href="#id-dateCard" data-toggle="collapse" Get Report By Date
    .card-body.collapse.show id="id-dateCard"
      = form_with(url: by_date_reports_path, method: "get", local: true) do
        .form-row
          .form-group.col-md-6
            = label_tag "start_date", "Start Date", for: "id-startDate"
            = date_field_tag "from", sunday, class: "form-control", id: "id-startDate", required: true
          .form-group.col-md-6
            = label_tag "end_date", "End Date", for: "id-endDate"
            = date_field_tag "to", saturday, class: "form-control", id: "id-endDate", required: true
        .form-group
          = label_tag "format", "Format", for: "id-format"
          = select_tag "format", options_for_select(%w[html pdf csv], "html"), class: "form-control", id: "id-format"
        .form-group
          = label_tag "rep_type", "Filter by Type", for: "id-repType"
          = select_tag "rep_type", options_for_select(SalesRep::REP_TYPES, "all"), class: "form-control", id: "id-repType"
        hr
        = render partial: "form_options"
        hr
        = button_tag "Submit", class: "btn btn-primary js-submitReportForm", name: nil

  .card.bg-light.mb-4
    .card-header.h5.font-weight-bold
      a href="#id-adminCard" data-toggle="collapse" Visit Admin Area
    .card-body.collapse id="id-adminCard"
      = link_to "Go", admin_root_path, class: "btn btn-primary"

  /.card.bg-light.mb-4
  /  .card-header.h5.font-weight-bold
  /    a href="#id-uploadCard" data-toggle="collapse" Upload Invoice Summary CSV
  /  .card-body.collapse id="id-uploadCard"
  /    strong Required Headers:
  /    p
  /      small = ImportInvoiceSummariesCSV.instance_variable_get(:@field_map).values.join(", ")
  /    = form_with(url: upload_batches_path, method: "post", local: true, multipart: true) do
  /      = file_field_tag "invoices", accept: "text/csv", class: "form-control-file", required: true
  /      hr
  /      = submit_tag "Upload", class: "btn btn-primary"
